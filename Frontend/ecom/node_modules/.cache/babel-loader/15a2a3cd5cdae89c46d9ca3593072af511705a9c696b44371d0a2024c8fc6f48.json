{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\eCom in SB and ReactJS\\\\Frontend\\\\ecom\\\\src\\\\Pages\\\\CartPage.js\",\n  _s = $RefreshSig$();\nimport Cart from \"../Components/Cart\";\nimport { useLoaderData, json, redirect } from \"react-router-dom\";\nimport { getAuthToken } from \"../util/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CartPage() {\n  _s();\n  const cartItems = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Cart, {\n      cartItems: cartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(CartPage, \"Q+b3QrPlLZi8vobtia74fYlwTkw=\", false, function () {\n  return [useLoaderData];\n});\n_c = CartPage;\nexport default CartPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const token = getAuthToken();\n  const productId = params.id;\n  console.log(\"product in loder..\" + productId);\n  let url = '';\n  if (productId > 0) {\n    url = process.env.REACT_APP_BASEURL + 'addCart?id=' + productId;\n  } else {\n    url = process.env.REACT_APP_BASEURL + 'cartsByUser';\n  }\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  console.log(\"response: \" + response);\n  if (!response.ok) {\n    //  console.log(\"Res:\" +response.message);\n    // throw json({message: 'Could not fetch event.'}, {status: response.status, statusText: response.statusText});\n    alert(\"Product is already in cart\");\n    return redirect('/productlist');\n  } else {\n    const resData = await response.json();\n    console.log(\"Res else:\" + response.message);\n    //  console.log(\"Response Data...  : \"+resData.carts[0].productName);\n    console.log(\"Res Data:\" + resData);\n    return resData.carts;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["Cart","useLoaderData","json","redirect","getAuthToken","jsxDEV","_jsxDEV","CartPage","_s","cartItems","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","token","productId","id","console","log","url","process","env","REACT_APP_BASEURL","response","fetch","method","headers","ok","alert","resData","message","carts","$RefreshReg$"],"sources":["C:/Users/User/Desktop/eCom in SB and ReactJS/Frontend/ecom/src/Pages/CartPage.js"],"sourcesContent":["import Cart from \"../Components/Cart\";\r\nimport { useLoaderData, json, redirect } from \"react-router-dom\";\r\nimport { getAuthToken } from \"../util/auth\";\r\n\r\nfunction CartPage(){\r\n\r\n    const cartItems = useLoaderData();\r\n\r\n    return(\r\n        <div>\r\n            <Cart cartItems = {cartItems}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage;\r\n\r\n\r\nexport async function loader({request, params}){\r\n    const token = getAuthToken();\r\n    const productId = params.id; \r\n    console.log(\"product in loder..\" +productId);\r\n    let url = '';\r\n    if(productId>0){\r\n        url = process.env.REACT_APP_BASEURL+'addCart?id='+productId\r\n    }else{\r\n        url = process.env.REACT_APP_BASEURL+'cartsByUser'\r\n    }\r\n   \r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token,\r\n          \r\n        }\r\n        \r\n    });\r\n\r\n    console.log(\"response: \" +response);\r\n\r\n    if(!response.ok){\r\n      //  console.log(\"Res:\" +response.message);\r\n        // throw json({message: 'Could not fetch event.'}, {status: response.status, statusText: response.statusText});\r\n        alert(\"Product is already in cart\")\r\n    return redirect('/productlist');\r\n     \r\n    \r\n    \r\n    }else{\r\n        const resData = await response.json();\r\n        console.log(\"Res else:\" +response.message);\r\n      //  console.log(\"Response Data...  : \"+resData.carts[0].productName);\r\n        console.log(\"Res Data:\" +resData);\r\n        return resData.carts;\r\n    }\r\n\r\n}"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,oBAAoB;AACrC,SAASC,aAAa,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAChE,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAEf,MAAMC,SAAS,GAAGR,aAAa,CAAC,CAAC;EAEjC,oBACIK,OAAA;IAAAI,QAAA,eACIJ,OAAA,CAACN,IAAI;MAACS,SAAS,EAAIA;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd;AAACN,EAAA,CATQD,QAAQ;EAAA,QAEKN,aAAa;AAAA;AAAAc,EAAA,GAF1BR,QAAQ;AAWjB,eAAeA,QAAQ;AAGvB,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC3C,MAAMC,KAAK,GAAGf,YAAY,CAAC,CAAC;EAC5B,MAAMgB,SAAS,GAAGF,MAAM,CAACG,EAAE;EAC3BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAEH,SAAS,CAAC;EAC5C,IAAII,GAAG,GAAG,EAAE;EACZ,IAAGJ,SAAS,GAAC,CAAC,EAAC;IACXI,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAC,aAAa,GAACP,SAAS;EAC/D,CAAC,MAAI;IACDI,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAC,aAAa;EACrD;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;IAC9BM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,eAAe,EAAE,SAAS,GAAGZ;IAE/B;EAEJ,CAAC,CAAC;EAEFG,OAAO,CAACC,GAAG,CAAC,YAAY,GAAEK,QAAQ,CAAC;EAEnC,IAAG,CAACA,QAAQ,CAACI,EAAE,EAAC;IACd;IACE;IACAC,KAAK,CAAC,4BAA4B,CAAC;IACvC,OAAO9B,QAAQ,CAAC,cAAc,CAAC;EAI/B,CAAC,MAAI;IACD,MAAM+B,OAAO,GAAG,MAAMN,QAAQ,CAAC1B,IAAI,CAAC,CAAC;IACrCoB,OAAO,CAACC,GAAG,CAAC,WAAW,GAAEK,QAAQ,CAACO,OAAO,CAAC;IAC5C;IACEb,OAAO,CAACC,GAAG,CAAC,WAAW,GAAEW,OAAO,CAAC;IACjC,OAAOA,OAAO,CAACE,KAAK;EACxB;AAEJ;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}